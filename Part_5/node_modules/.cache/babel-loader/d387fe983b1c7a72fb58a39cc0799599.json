{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilizador\\\\Documents\\\\GitHub\\\\FullStack_Part5\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable'; // import LoginForm from './components/LoginForm'\n\nimport BlogForm from './components/BlogForm';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [notificationSuccess, setNotificationsuccess] = useState('notification');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user); // blogService.setToken(user.token)\n\n      console.log('Use Effect: ', `bearer ${user.token}`);\n    }\n  }, []); //Handle Login/Logout------------------------------------------------\n\n  const handleLogout = () => {\n    console.log(window.localStorage);\n    window.localStorage.clear();\n    setUser(null);\n    console.log('Logged Out');\n    console.log(window.localStorage);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('loggin in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotificationsuccess('notification');\n      setErrorMessage('Successfull login');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setNotificationsuccess('error');\n      setErrorMessage('Wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  }; //Login Form---------------------------------------------------\n\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        name: \"Password\",\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this); //Blog Form---------------------------------------------------\n  // const blogForm = () => (\n  //   <form onSubmit={addBlog}>\n  //     <div>\n  //     title:\n  //       <input\n  //         type=\"text\"\n  //         value={newTitle}\n  //         name=\"Title\"\n  //         onChange={({ target }) => setNewTitle(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //     author:\n  //       <input\n  //         type=\"text\"\n  //         value={newAuthor}\n  //         name=\"Author\"\n  //         onChange={({ target }) => setNewAuthor(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //     url:\n  //       <input\n  //         type=\"text\"\n  //         value={newUrl}\n  //         name=\"Url\"\n  //         onChange={({ target }) => setNewUrl(target.value)}\n  //       />\n  //     </div>\n  //     <button type='submit'>create</button>\n  //   </form>\n  // )\n  //Add Blog---------------------------------------------------\n\n\n  const blogFormRef = useRef();\n\n  const addBlog = blogObject => {\n    // event.preventDefault()\n    // const blogObject = {\n    //   title: newTitle,\n    //   author: newAuthor,\n    //   url: newUrl\n    // }\n    // console.log(blogObject)\n    // try {\n    blogFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog)); // setNewTitle('')\n      // setNewAuthor('')\n      // setNewUrl('')\n    });\n    setNotificationsuccess('notification');\n    setErrorMessage('Blog added successfully');\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  }; // catch (exception) {\n  //     setNotificationsuccess('error')\n  //     setErrorMessage('The blog could not be added')\n  //     setTimeout(() => {\n  //       setErrorMessage(null)\n  //     }, 5000)\n  // }\n  // }\n\n\n  const sortBlogs = blogs.sort((a, b) => b.likes - a.likes);\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log in to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        message: errorMessage,\n        type: notificationSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), loginForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage,\n      type: notificationSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [user.username, \" logged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"newblog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), sortBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lnXMJhorZ0wVK09Hzll7C3XP3+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Utilizador/Documents/GitHub/FullStack_Part5/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","Notification","Togglable","BlogForm","blogService","loginService","App","blogs","setBlogs","errorMessage","setErrorMessage","notificationSuccess","setNotificationsuccess","username","setUsername","password","setPassword","user","setUser","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","console","log","token","handleLogout","clear","handleLogin","event","preventDefault","login","setItem","stringify","setToken","setTimeout","exception","loginForm","target","value","blogFormRef","addBlog","blogObject","current","toggleVisibility","create","returnedBlog","concat","sortBlogs","sort","a","b","likes","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n// import LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notificationSuccess, setNotificationsuccess] = useState('notification')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(blogs =>\n        setBlogs( blogs )\n      )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      // blogService.setToken(user.token)\n      console.log('Use Effect: ',`bearer ${user.token}`)\n    }\n  }, [])\n\n  //Handle Login/Logout------------------------------------------------\n\n  const handleLogout = () => {\n    console.log(window.localStorage)\n    window.localStorage.clear()\n    setUser(null)\n    console.log('Logged Out')\n    console.log(window.localStorage)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('loggin in with', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setNotificationsuccess('notification')\n      setErrorMessage('Successfull login')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setNotificationsuccess('error')\n      setErrorMessage('Wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  //Login Form---------------------------------------------------\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n      username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n      password\n        <input\n          type=\"text\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  //Blog Form---------------------------------------------------\n\n  // const blogForm = () => (\n  //   <form onSubmit={addBlog}>\n  //     <div>\n  //     title:\n  //       <input\n  //         type=\"text\"\n  //         value={newTitle}\n  //         name=\"Title\"\n  //         onChange={({ target }) => setNewTitle(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //     author:\n  //       <input\n  //         type=\"text\"\n  //         value={newAuthor}\n  //         name=\"Author\"\n  //         onChange={({ target }) => setNewAuthor(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //     url:\n  //       <input\n  //         type=\"text\"\n  //         value={newUrl}\n  //         name=\"Url\"\n  //         onChange={({ target }) => setNewUrl(target.value)}\n  //       />\n  //     </div>\n  //     <button type='submit'>create</button>\n  //   </form>\n  // )\n\n  //Add Blog---------------------------------------------------\n\n  const blogFormRef = useRef()\n\n  const addBlog = (blogObject) => {\n    // event.preventDefault()\n    // const blogObject = {\n    //   title: newTitle,\n    //   author: newAuthor,\n    //   url: newUrl\n    // }\n    // console.log(blogObject)\n\n    // try {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n      // setNewTitle('')\n      // setNewAuthor('')\n      // setNewUrl('')\n      })\n    setNotificationsuccess('notification')\n    setErrorMessage('Blog added successfully')\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  // catch (exception) {\n  //     setNotificationsuccess('error')\n  //     setErrorMessage('The blog could not be added')\n  //     setTimeout(() => {\n  //       setErrorMessage(null)\n  //     }, 5000)\n  // }\n  // }\n\n  const sortBlogs = blogs.sort((a, b) => b.likes - a.likes)\n\n  if (user === null) {\n    return(\n      <div>\n        <h2>Log in to application</h2>\n        <Notification message={errorMessage} type={notificationSuccess} />\n        {loginForm()}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={errorMessage} type={notificationSuccess} />\n      <h3>{user.username} logged in</h3>\n      <button onClick={handleLogout}>Logout</button>\n\n      <Togglable buttonLabel='newblog' ref={blogFormRef}>\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n\n      {sortBlogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}